'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactNative = require('react-native');

var _style = require('./style');

var _style2 = _interopRequireDefault(_style);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var TabBarItem = function (_React$Component) {
  (0, _inherits3["default"])(TabBarItem, _React$Component);

  function TabBarItem() {
    (0, _classCallCheck3["default"])(this, TabBarItem);
    return (0, _possibleConstructorReturn3["default"])(this, _React$Component.apply(this, arguments));
  }

  TabBarItem.prototype.render = function render() {
    var _props = this.props;
    var title = _props.title;
    var selected = _props.selected;
    var tintColor = _props.tintColor;
    var unselectedTintColor = _props.unselectedTintColor;
    var icon = _props.icon;
    var selectedIcon = _props.selectedIcon;
    var onPress = _props.onPress;
    var badge = _props.badge;

    var itemSelectedStyle = selected ? _style2["default"].barItemSelected : null;
    return React.createElement(
      _reactNative.TouchableWithoutFeedback,
      { onPress: onPress },
      React.createElement(
        _reactNative.View,
        { style: [_style2["default"].barItem, itemSelectedStyle] },
        React.createElement(
          _reactNative.View,
          null,
          React.createElement(_reactNative.Image, { source: selected ? selectedIcon : icon, style: _style2["default"].barIcon }),
          badge && React.createElement(
            _reactNative.View,
            { style: [_style2["default"].badge] },
            React.createElement(
              _reactNative.Text,
              { style: [_style2["default"].badgeText] },
              badge
            )
          )
        ),
        React.createElement(
          _reactNative.Text,
          { style: [_style2["default"].barItemTitle, { color: selected ? tintColor : unselectedTintColor }] },
          title
        )
      )
    );
  };

  return TabBarItem;
}(React.Component);

exports["default"] = TabBarItem;

TabBarItem.defaultProps = {
  onPress: function onPress() {}
};
module.exports = exports['default'];