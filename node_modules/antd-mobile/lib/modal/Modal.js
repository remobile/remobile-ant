'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = undefined;

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _rcDialog = require('rc-dialog');

var _rcDialog2 = _interopRequireDefault(_rcDialog);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Modal = function (_React$Component) {
    (0, _inherits3["default"])(Modal, _React$Component);

    function Modal() {
        (0, _classCallCheck3["default"])(this, Modal);
        return (0, _possibleConstructorReturn3["default"])(this, _React$Component.apply(this, arguments));
    }

    Modal.prototype.componentWillMount = function componentWillMount() {
        var _props = this.props;
        var visible = _props.visible;
        var onShow = _props.onShow;

        if (visible) {
            onShow();
        }
    };

    Modal.prototype.componentDidMount = function componentDidMount() {
        this.componentDidUpdate(this.props);
    };

    Modal.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        if (nextProps.visible) {
            this.props.onShow();
        }
    };

    Modal.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        var _props2 = this.props;
        var prefixCls = _props2.prefixCls;
        var closable = _props2.closable;
        // visible always true

        if (prevProps.visible === true && !closable) {
            var closeDom = document.getElementsByClassName(prefixCls + '-close')[0];
            if (closeDom) {
                closeDom.style.display = 'none';
            }
        }
    };

    Modal.prototype.render = function render() {
        var _classNames;

        var _props3 = this.props;
        var prefixCls = _props3.prefixCls;
        var className = _props3.className;
        var wrapClassName = _props3.wrapClassName;
        var transparent = _props3.transparent;
        var animated = _props3.animated;
        var transitionName = _props3.transitionName;
        var maskTransitionName = _props3.maskTransitionName;
        var closable = _props3.closable;
        var maskClosable = _props3.maskClosable;
        var style = _props3.style;
        var title = _props3.title;
        var bodyStyle = _props3.bodyStyle;
        var visible = _props3.visible;
        var children = _props3.children;
        var onClose = _props3.onClose;
        var footer = _props3.footer;

        var wrapCls = (0, _classnames2["default"])((_classNames = {}, (0, _defineProperty3["default"])(_classNames, className, !!className), (0, _defineProperty3["default"])(_classNames, prefixCls + '-transparent', transparent), _classNames));
        var anim = transitionName || (animated ? transparent ? 'am-fade' : 'am-slide-up' : null);
        var maskAnim = maskTransitionName || (animated ? transparent ? 'am-fade' : 'am-slide-up' : null);
        var btnGroupClass = prefixCls + '-button-group-' + (footer.length === 2 ? 'h' : 'v');
        var footerDom = footer.length ? [React.createElement(
            'div',
            { key: 'footer', className: btnGroupClass },
            footer.map(function (button, i) {
                return React.createElement(
                    'a',
                    { key: i, className: prefixCls + '-button', href: '#', onClick: function onClick(e) {
                            e.preventDefault();
                            if (button.onPress) {
                                button.onPress();
                            }
                        } },
                    button.text || '按钮' + i
                );
            })
        )] : null;
        // transparent 模式下, 内容默认居中
        var rootStyle = transparent ? (0, _objectAssign2["default"])({
            width: '5.4rem',
            height: 'auto'
        }, style) : (0, _objectAssign2["default"])({
            width: '100%',
            height: '100%'
        }, style);
        return React.createElement(
            _rcDialog2["default"],
            { prefixCls: prefixCls, className: wrapCls, title: title, wrapClassName: wrapClassName, transitionName: anim, maskTransitionName: maskAnim, style: rootStyle, bodyStyle: bodyStyle, visible: visible, closable: closable || maskClosable, maskClosable: maskClosable, onClose: onClose, footer: footerDom },
            children
        );
    };

    return Modal;
}(React.Component);

exports["default"] = Modal;

Modal.defaultProps = {
    prefixCls: 'am-modal',
    wrapClassName: '',
    visible: false,
    closable: false,
    maskClosable: false,
    transparent: false,
    animated: true,
    style: {},
    bodyStyle: {},
    onClose: function onClose() {},
    onShow: function onShow() {},

    footer: []
};
module.exports = exports['default'];