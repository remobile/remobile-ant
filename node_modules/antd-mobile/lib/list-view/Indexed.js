'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _rmcListView = require('rmc-list-view');

var _rmcListView2 = _interopRequireDefault(_rmcListView);

var _list = require('../list');

var _list2 = _interopRequireDefault(_list);

var _MyList = require('./MyList');

var _MyList2 = _interopRequireDefault(_MyList);

var _splitObject3 = require('../_util/splitObject');

var _splitObject4 = _interopRequireDefault(_splitObject3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Header = _list2["default"].Header;
var Body = _list2["default"].Body;
var Footer = _list2["default"].Footer;
var Item = _list2["default"].Item;

var MListViewIndexedList = _rmcListView2["default"].IndexedList;

var IndexedList = function (_React$Component) {
    (0, _inherits3["default"])(IndexedList, _React$Component);

    function IndexedList() {
        (0, _classCallCheck3["default"])(this, IndexedList);
        return (0, _possibleConstructorReturn3["default"])(this, _React$Component.apply(this, arguments));
    }

    IndexedList.prototype.render = function render() {
        var _splitObject = (0, _splitObject4["default"])(this.props, ['renderHeader', 'renderFooter', 'renderSectionHeader', 'renderRow']);

        var _splitObject2 = (0, _slicedToArray3["default"])(_splitObject, 2);

        var _splitObject2$ = _splitObject2[0];
        var renderHeader = _splitObject2$.renderHeader;
        var renderFooter = _splitObject2$.renderFooter;
        var renderSectionHeader = _splitObject2$.renderSectionHeader;
        var renderRow = _splitObject2$.renderRow;
        var restProps = _splitObject2[1];

        var extraProps = {
            renderHeader: null,
            renderFooter: null,
            renderSectionHeader: null
        };
        if (renderHeader) {
            extraProps.renderHeader = function () {
                return React.createElement(
                    Header,
                    null,
                    renderHeader()
                );
            };
        }
        if (renderFooter) {
            extraProps.renderFooter = function () {
                return React.createElement(
                    Footer,
                    null,
                    renderFooter()
                );
            };
        }
        if (renderSectionHeader) {
            extraProps.renderSectionHeader = function (sectionData, sectionID) {
                return React.createElement(
                    Item,
                    null,
                    renderSectionHeader(sectionData, sectionID)
                );
            };
        }
        return React.createElement(
            MListViewIndexedList,
            (0, _extends3["default"])({}, restProps, extraProps, { renderScrollComponent: function renderScrollComponent(props) {
                    return React.createElement(_MyList2["default"], props);
                }, renderRow: renderRow, renderBodyComponent: function renderBodyComponent() {
                    return React.createElement(Body, null);
                } }),
            this.props.children
        );
    };

    return IndexedList;
}(React.Component);

exports["default"] = IndexedList;

IndexedList.propTypes = {
    prefixCls: _react.PropTypes.string
};
IndexedList.defaultProps = {
    prefixCls: 'am-indexed-list'
};
module.exports = exports['default'];